generator client {
  provider             = "prisma-client-py"
  binaryTargets        = ["native", "debian-openssl-3.0.x"]
  recursive_type_depth = -1
}

generator db {
  provider  = "prisma-client-py"
  interface = "sync"
}

datasource db {
  provider          = "mysql"
  url               = "mysql://u511026640_hackthon:Doyourjob@123@srv1192.hstgr.io:3306/u511026640_hackthon"
  shadowDatabaseUrl = "mysql://u511026640_shadow:Doyourjob@123@srv1192.hstgr.io:3306/u511026640_shadow"
}

model Users {
  id       Int    @id @default(autoincrement())
  username String @unique
  email    String @unique
  password String
}

model actors {
  actor_id     Int          @id
  actor_name   String?      @db.VarChar(255)
  gender       Int?
  profile_path String?
  movie_cast   movie_cast[]
}

model genres {
  genre_id     Int            @id
  genre_name   String?        @db.VarChar(100)
  movie_genres movie_genres[]
}

model movie_cast {
  movie_id       Int
  actor_id       Int
  character_name String? @db.VarChar(255)
  credit_order   Int?
  credit_id      String? @db.VarChar(100)
  actors         actors  @relation(fields: [actor_id], references: [actor_id], onDelete: NoAction, onUpdate: NoAction)
  movies         movies  @relation(fields: [movie_id], references: [movie_id], onDelete: NoAction, onUpdate: NoAction)

  @@id([movie_id, actor_id])
  @@index([actor_id], map: "movie_cast_actor_id_fkey")
}

model movie_genres {
  movie_id Int
  genre_id Int
  genres   genres @relation(fields: [genre_id], references: [genre_id], onDelete: NoAction, onUpdate: NoAction)
  movies   movies @relation(fields: [movie_id], references: [movie_id], onDelete: NoAction, onUpdate: NoAction)

  @@id([movie_id, genre_id])
  @@index([genre_id], map: "movie_genres_genre_id_fkey")
}

model movies {
  movie_id     Int            @id
  title        String?        @db.VarChar(255)
  poster_path  String?
  release_date DateTime?      @db.Date
  budget       BigInt?
  revenue      BigInt?
  runtime      Float?         @db.Float
  overview     String?        @db.LongText
  rating       Float?
  movie_cast   movie_cast[]
  movie_genres movie_genres[]
}
